apply plugin: 'com.android.library'

android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]

    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]

        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath true
                arguments = [
                        AROUTER_MODULE_NAME: project.getName(),
                        moduleName         : project.getName()
                ]
            }
        }
    }
    dexOptions {
    }
}

buildscript {
    repositories {
        jcenter()
    }
}

dependencies {
    // annotations
    api rootProject.ext.dependencies["annotations"]
    compileOnly rootProject.ext.dependencies["javax.annotation"]

    // support
    api(rootProject.ext.dependencies["support-v4"]) {
        exclude module: 'support-annotations'
    }
    api(rootProject.ext.dependencies["appcompat-v7"]) {
        exclude module: 'support-annotations'
        exclude module: 'support-v4'
    }
    api(rootProject.ext.dependencies["design"]) {
        exclude module: 'support-annotations'
        exclude module: 'appcompat-v7'
        exclude module: 'support-v4'
    }
    api(rootProject.ext.dependencies["cardview-v7"]) {
        exclude module: 'support-annotations'
    }
    api rootProject.ext.dependencies["constraint-layout"]

    // lifecycle
    api rootProject.ext.dependencies["lifecycle-common"]
    api rootProject.ext.dependencies["lifecycle-extensions"]

    // router
    api rootProject.ext.dependencies["arouter"]

    // room
    api rootProject.ext.dependencies["room-runtime"]
    api rootProject.ext.dependencies["room-rxjava2"]

    // page
    api rootProject.ext.dependencies["arch-paging"]
    api rootProject.ext.dependencies["paginate"]

    // view
    api(rootProject.ext.dependencies["autolayout"]) {
        exclude group: 'com.android.support'
    }
    api(rootProject.ext.dependencies["butterknife"]) {
        exclude module: 'support-annotations'
    }
    api rootProject.ext.dependencies["qmui"]

    // rx
    api rootProject.ext.dependencies["rxjava2"]
    api(rootProject.ext.dependencies["rxandroid2"]) {
        exclude module: 'rxjava'
    }
    api(rootProject.ext.dependencies["rxcache2"]) {
        exclude module: 'rxjava'
        exclude module: 'dagger'
    }
    implementation(rootProject.ext.dependencies["rxcache-jolyglot-gson"]) {
        exclude module: 'gson'
    }
    api(rootProject.ext.dependencies["rxlifecycle2"]) {
        exclude module: 'rxjava'
        exclude module: 'jsr305'
    }
    api(rootProject.ext.dependencies["rxlifecycle2-android"]) {
        exclude module: 'support-annotations'
        exclude module: 'rxjava'
        exclude module: 'rxandroid'
        exclude module: 'rxlifecycle'
    }
    api(rootProject.ext.dependencies["rxpermissions2"]) {
        exclude module: 'rxjava'
        exclude module: 'support-annotations'
    }
    api rootProject.ext.dependencies['rxerrorhandler2']

    // network
    api(rootProject.ext.dependencies["retrofit"]) {
        exclude module: 'okhttp'
        exclude module: 'okio'
    }
    api rootProject.ext.dependencies["retrofit-url-manager"]

    implementation(rootProject.ext.dependencies["retrofit-converter-gson"]) {
        exclude module: 'gson'
        exclude module: 'okhttp'
        exclude module: 'okio'
        exclude module: 'retrofit'
    }
    implementation(rootProject.ext.dependencies["retrofit-adapter-rxjava2"]) {
        exclude module: 'rxjava'
        exclude module: 'okhttp'
        exclude module: 'retrofit'
        exclude module: 'okio'
    }
    api rootProject.ext.dependencies["okhttp3"]

    // glide
    api(rootProject.ext.dependencies["glide"]) {
        exclude module: 'support-v4'
    }
    annotationProcessor(rootProject.ext.dependencies["glide-compiler"]) {
        exclude module: 'jsr305'
    }

    // dagger
    api rootProject.ext.dependencies["dagger"]
    annotationProcessor rootProject.ext.dependencies["dagger-compiler"]

    // eventbus
    api rootProject.ext.dependencies["androideventbus"]

    // gson
    api rootProject.ext.dependencies["gson"]

    // log and test
    api rootProject.ext.dependencies["timber"]
    testImplementation rootProject.ext.dependencies["junit"]
    debugApi rootProject.ext.dependencies["canary-debug"]
    releaseApi rootProject.ext.dependencies["canary-release"]
    testImplementation rootProject.ext.dependencies["canary-release"]

    // tools
    api rootProject.ext.dependencies["progressmanager"]

}